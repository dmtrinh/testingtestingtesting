<#
.SYNOPSIS
  Download files from SharePoint Online sites you can access.

.DESCRIPTION
  Two modes:
    A) Direct file URL mode: Provide a full SharePoint file URL and a destination path.
    B) Site search mode: Connect to a site, search by filename/pattern across all document libraries,
       select results, and download them.

.PARAMETER FileUrl
  Full SharePoint file URL (e.g., https://contoso.sharepoint.com/sites/TeamX/Shared%20Documents/Folder/File.pdf)

.PARAMETER SiteUrl
  SharePoint site URL (e.g., https://contoso.sharepoint.com/sites/TeamX)

.PARAMETER SearchTerm
  Filename substring to search for (e.g., "Q3 Report"). Case-insensitive.

.PARAMETER Destination
  Local folder to save files. Defaults to current directory.

.EXAMPLES
  # A) Direct download by full file URL
  .\Download-FromSPO.ps1 -FileUrl "https://contoso.sharepoint.com/sites/TeamX/Shared%20Documents/Report.pdf" -Destination "C:\Downloads"

  # B) Search within a site and choose results interactively
  .\Download-FromSPO.ps1 -SiteUrl "https://contoso.sharepoint.com/sites/TeamX" -SearchTerm "report" -Destination "C:\Downloads"
#>

[CmdletBinding()]
param(
  [string]$FileUrl,
  [string]$SiteUrl,
  [string]$SearchTerm,
  [string]$Destination = "."
)

function Ensure-Module {
  param([string]$Name)
  if (-not (Get-Module -ListAvailable -Name $Name)) {
    Write-Host "Installing module '$Name' for current user..." -ForegroundColor Cyan
    try {
      Install-Module $Name -Scope CurrentUser -Force -ErrorAction Stop
    } catch {
      throw "Failed to install module '$Name'. $_"
    }
  }
  Import-Module $Name -ErrorAction Stop
}

function Connect-ToSite {
  param([string]$Url)
  Write-Host "Connecting to $Url (interactive login)..." -ForegroundColor Cyan
  Connect-PnPOnline -Url $Url -Interactive -Scopes "AllSites.Read"
}

function Get-ServerRelativeUrlFromFull {
  param([string]$FullUrl)
  $uri = [Uri]$FullUrl
  return $uri.AbsolutePath
}

function Get-SiteUrlFromFull {
  param([string]$FullUrl)
  $uri = [Uri]$FullUrl
  $path = $uri.AbsolutePath

  $candidates = @("/Shared Documents", "/Documents", "/SiteAssets", "/General", "/Forms/")
  $idx = -1
  foreach ($c in $candidates) {
    $i = $path.IndexOf($c, [System.StringComparison]::OrdinalIgnoreCase)
    if ($i -ge 0) { $idx = $i; break }
  }

  if ($idx -gt 0) {
    $sitePath = $path.Substring(0, $idx)
  } else {
    $parts = $path.Trim("/").Split("/")
    $sitePos = [Array]::IndexOf($parts, "sites")
    if ($sitePos -ge 0 -and $sitePos + 1 -lt $parts.Count) {
      $sitePath = "/sites/$($parts[$sitePos+1])"
    } else {
      $sitePath = ""
    }
  }

  $base = "{0}://{1}{2}" -f $uri.Scheme, $uri.Host, $sitePath
  return $base
}

function Get-DocumentLibraries {
  Get-PnPList | Where-Object { $_.BaseTemplate -eq 101 -and -not $_.Hidden }
}

function Search-LibraryFiles {
  param(
    [string]$ListTitle,
    [string]$Term
  )
  $caml = @"
<View>
  <Query>
    <Where>
      <Contains>
        <FieldRef Name='FileLeafRef' />
        <Value Type='Text'>$Term</Value>
      </Contains>
    </Where>
  </Query>
  <ViewFields>
    <FieldRef Name='FileRef' />
    <FieldRef Name='FileLeafRef' />
    <FieldRef Name='Modified' />
    <FieldRef Name='Author' />
    <FieldRef Name='Editor' />
    <FieldRef Name='File_x0020_Size' />
  </ViewFields>
  <RowLimit Paged='TRUE'>500</RowLimit>
</View>
"@

  $items = Get-PnPListItem -List $ListTitle -Query $caml -PageSize 500 -ErrorAction SilentlyContinue
  foreach ($it in $items) {
    $fileRef = $it.FieldValues["FileRef"]
    if ($fileRef -and ($it.FileSystemObjectType -eq "File" -or $fileRef -match "\.[A-Za-z0-9]+$")) {
      [PSCustomObject]@{
        Library     = $ListTitle
        Name        = $it.FieldValues["FileLeafRef"]
        ServerUrl   = $fileRef
        Modified    = $it.FieldValues["Modified"]
        SizeBytes   = $it.FieldValues["File_x0020_Size"]
      }
    }
  }
}

function Download-ByServerUrl {
  param(
    [string]$ServerRelativeUrl,
    [string]$Destination
  )
  $fileName = [System.IO.Path]::GetFileName($ServerRelativeUrl)
  if (-not (Test-Path -LiteralPath $Destination)) {
    New-Item -ItemType Directory -Path $Destination | Out-Null
  }
  Write-Host "Downloading '$fileName' to '$Destination'..." -ForegroundColor Green
  Get-PnPFile -Url $ServerRelativeUrl -FileName $fileName -Path $Destination -AsFile -Force -ErrorAction Stop
  Write-Host "Saved: $(Join-Path $Destination $fileName)" -ForegroundColor Green
}

Ensure-Module -Name "PnP.PowerShell"

if ($FileUrl) {
  $site = Get-SiteUrlFromFull -FullUrl $FileUrl
  $serverRel = Get-ServerRelativeUrlFromFull -FullUrl $FileUrl

  Connect-ToSite -Url $site
  Download-ByServerUrl -ServerRelativeUrl $serverRel -Destination $Destination
  return
}

if (-not $SiteUrl -or -not $SearchTerm) {
  Write-Host "No -FileUrl provided. For site search mode, specify both -SiteUrl and -SearchTerm." -ForegroundColor Yellow
  exit 1
}

Connect-ToSite -Url $SiteUrl

$libs = Get-DocumentLibraries
if (-not $libs) {
  throw "No document libraries found on $SiteUrl (or you don't have access)."
}

$results = foreach ($lib in $libs) {
  Search-LibraryFiles -ListTitle $lib.Title -Term $SearchTerm
}

if (-not $results -or $results.Count -eq 0) {
  Write-Host "No files matching '$SearchTerm' were found on this site." -ForegroundColor Yellow
  exit 0
}

$indexed = $results |
  Sort-Object Name, Modified -Descending |
  Select-Object @{n="Idx"; e={$_idx = [ref]0; ($_idx.Value = ($_idx.Value + 1)); $_idx.Value }},
                Name, Library, Modified,
                @{n="SizeKB"; e={ if($_.SizeBytes){ [math]::Round($_.SizeBytes/1kb,2) } else { $null } }},
                ServerUrl

$indexed | Format-Table -AutoSize

$choice = Read-Host "Enter one or more Idx values to download (comma-separated), or 'all'"

$toDownload = @()
if ($choice -match '^\s*all\s*$') {
  $toDownload = $indexed
} else {
  $indices = $choice -split "," | ForEach-Object { $_.Trim() } | Where-Object { $_ -match '^\d+$' } | ForEach-Object { [int]$_ }
  $toDownload = $indexed | Where-Object { $indices -contains $_.Idx }
}

if (-not $toDownload -or $toDownload.Count -eq 0) {
  Write-Host "No valid selection made. Exiting." -ForegroundColor Yellow
  exit 0
}

foreach ($row in $toDownload) {
  Download-ByServerUrl -ServerRelativeUrl $row.ServerUrl -Destination $Destination
}

Write-Host "Done." -ForegroundColor Green
